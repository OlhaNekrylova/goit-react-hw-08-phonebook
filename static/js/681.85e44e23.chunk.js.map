{"version":3,"file":"static/js/681.85e44e23.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/modules/ContactForm/ContactForm.module.css?32da","modules/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/ContactList/ContactList.module.css?aa60","modules/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/Filter/Filter.module.css?ca1f","modules/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/MyContacts/MyContacts.module.css?c4c0","modules/MyContacts/MyContacts.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getAllContacts = store => store.contacts.items;\n\nexport const getFilter = store => store.filter;\n\nexport const getFilteredContacts = createSelector(\n    [getAllContacts, getFilter],\n    (allContacts, filter) => {\n      if(filter){\n        return allContacts.filter(contact =>      \n        contact.name.toLowerCase().includes(filter.toLowerCase()));\n      } else {\n        return allContacts;\n      }\n}); ","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__nXUDe\",\"label\":\"ContactForm_label__0MtWF\",\"input\":\"ContactForm_input__++7Rw\",\"button\":\"ContactForm_button__aavNL\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { fetchAddContact } from \"../../redux/contacts/contacts-operations\";\nimport { getAllContacts } from \"../../redux/selectors\";\n\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n    const allContacts = useSelector(getAllContacts);\n    \n    const dispatch = useDispatch();\n\n    const handleAddContact = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n\n        const newContact = { name, number };\n\n        const isPresentContact = allContacts.find(element => \n            element.name.toLowerCase() === newContact.name.toLowerCase()\n        ) ? true: false;\n        \n        if (isPresentContact){\n            alert(`${newContact.name} is already in contacts.`)\n        } else {\n            dispatch(fetchAddContact(newContact));\n            form.reset();\n        }        \n    }\n\n    return (\n            <form className={styles.form} onSubmit={handleAddContact}>\n                <label className={styles.label}> \n                    Name\n                    <input\n                        className={styles.input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                    \n                <label className={styles.label}>\n                    Number\n                    <input\n                        className={styles.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n                    \n                <button className={styles.button}  type='submit'>\n                    Add contact\n                </button>\n            </form>\n        );\n    };\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__w6thP\",\"item\":\"ContactList_item__0aVR0\",\"info\":\"ContactList_info__KHl4K\",\"button\":\"ContactList_button__6lZ5J\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { useEffect } from 'react';\n\nimport { fetchAllContacts, fetchDeleteContact } from \"../../redux/contacts/contacts-operations\";\nimport { getFilteredContacts } from \"../../redux/selectors\";\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n    \n    const dispatch = useDispatch();\n\n    useEffect(()=> {\n        dispatch(fetchAllContacts());\n    }, [dispatch])\n\n    const handleDeleteContact = (id) => {\n        dispatch(fetchDeleteContact(id));\n    }\n\n    const contactList = useSelector(getFilteredContacts);\n\n    return (\n        <ul className={styles.list}>\n            {contactList.map(({ id, name, number }) => (\n                <li \n                key={id}\n                className={styles.item}>\n                <p className={styles.info}>{name}: {number}</p>\n                <button\n                    className={styles.button}\n                    type=\"button\"\n                    onClick={() => handleDeleteContact(id)}\n                >\n                Delete\n                </button>\n            </li>\n            ))}\n        </ul>\n    );\n};\n\nContactList.defaultProps = {\n    items: []\n}\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__HwuTE\",\"filterInput\":\"Filter_filterInput__LOSid\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport React from 'react';\n\nimport {setFilter} from \"../../redux/filter/filter-slice\";\nimport {getFilter} from \"../../redux/selectors\";\n\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n    const filter = useSelector(getFilter);\n\n    const dispatch = useDispatch();\n\n    const handleFilter = ({ target }) => {\n        dispatch(setFilter(target.value))\n    };\n\n    return (\n        <label className={styles.filterLabel}>\n            Find contacts by name\n            <input\n                className={styles.filterInput}\n                type=\"text\"\n                value={filter}\n                onChange={handleFilter}\n                required\n            />\n        </label>\n    ); \n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MyContacts_text__88sVP\"};","import ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\n\nimport styles from \"./MyContacts.module.css\";\n\nconst MyContacts = () => {\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <div className={styles.wrapper}>\n                <div className={styles.block}>\n                    <ContactForm />\n                </div> \n                <div className={styles.block}>\n                    <h2>Contacts</h2>\n                    <Filter />\n                    <ContactList />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyContacts;","// extracted by mini-css-extract-plugin\nexport default {\"visuallyHidden\":\"ContactsPage_visuallyHidden__fmrPK\"};","import MyContacts from \"../../modules/MyContacts/MyContacts\";\nimport styles from \"./ContactsPage.module.css\"\n\nconst ContactsPage = ()=> {\n    return (\n        <>\n            <h1 className={styles.visuallyHidden}>Contacts page</h1>\n            <MyContacts />\n        </>\n    ) \n}\n\nexport default ContactsPage;"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getAllContacts","store","contacts","items","getFilter","filter","getFilteredContacts","allContacts","contact","toLowerCase","includes","useSelector","dispatch","useDispatch","className","styles","onSubmit","e","preventDefault","form","currentTarget","newContact","elements","number","element","alert","fetchAddContact","reset","type","pattern","title","required","ContactList","useEffect","fetchAllContacts","contactList","id","onClick","fetchDeleteContact","handleDeleteContact","defaultProps","onChange","target","setFilter"],"sourceRoot":""}