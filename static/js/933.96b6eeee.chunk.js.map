{"version":3,"file":"static/js/933.96b6eeee.chunk.js","mappings":"yPAiBA,EAjBe,CACXA,MAAO,CACHC,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,MAAO,aACPC,YAAa,cAEjBC,SAAU,CACNL,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,MAAO,gBACPC,YAAa,kBCRrB,EALqB,CACjBL,MAAO,GACPM,SAAU,ICDd,EAAuB,wB,SC2BvB,EAjBkB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,GAA4CC,EAAAA,EAAAA,GAAQ,CAACC,aAAAA,EAAcF,SAAAA,IAA5DG,EAAP,EAAOA,MAAOC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,aACrBZ,EAAmBU,EAAnBV,MAAOM,EAAYI,EAAZJ,SAEd,OACI,kBAAMC,SAAUK,EAAcC,UAAWC,EAAzC,WACI,SAACC,EAAA,GAAD,QAAWC,MAAOhB,EAAOW,aAAcA,GAAkBM,EAAAA,SACzD,SAACF,EAAA,GAAD,QAAWC,MAAOV,EAAUK,aAAcA,GAAkBM,EAAAA,YAC5D,SAACC,EAAA,EAAD,sBAGX,ECDD,EAfkB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACI,iBAAKP,UAAU,YAAf,WACI,eAAIA,UAAU,aAAd,oBACA,SAAC,EAAD,CAAWN,SAPC,SAACc,GACjBF,GAASG,EAAAA,EAAAA,IAAMD,GAClB,MAQJ,C,uDClBD,MAAsB,oB,SCKtB,EAJe,SAAC,GAAgC,IAA/BE,EAA8B,EAA9BA,SAA8B,IAApBtB,KAAAA,OAAoB,MAAb,SAAa,EAC3C,OAAO,mBAAQA,KAAMA,EAAMY,UAAWC,EAA/B,SAA4CS,GACtD,C,mGCHD,EAA0B,2BAA1B,EAA6D,yB,oCCe7D,EAXkB,SAAC,GAAqC,IAApCnB,EAAmC,EAAnCA,MAAOO,EAA4B,EAA5BA,aAAiBa,GAAW,YAC7CC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAKC,EAAAA,EAAAA,KAAL,GAAe,IAElC,OACI,iBAAKd,UAAWC,EAAhB,WACI,kBAAOc,QAASH,EAAhB,SAAqBrB,KACrB,0BAAOS,UAAWC,EAAcW,GAAIA,EAAII,SAAUlB,GAAkBa,MAG/E,C,kECQD,IAnBgB,SAAC,GAA6B,IAA5Bf,EAA2B,EAA3BA,aAAcF,EAAa,EAAbA,SAC5B,GAA0BuB,EAAAA,EAAAA,WAAS,UAAIrB,IAAvC,eAAOC,EAAP,KAAcqB,EAAd,KAEMpB,GAAeqB,EAAAA,EAAAA,cAAY,YAAe,IAAbC,EAAY,EAAZA,OACxB/B,EAAe+B,EAAf/B,KAAMc,EAASiB,EAATjB,MACbe,GAAS,SAAAG,GACL,OAAO,kBAAIA,GAAX,cAAuBhC,EAAOc,GACjC,GACJ,GAAE,CAACe,IAQJ,MAAO,CAACrB,MAAAA,EAAOqB,SAAAA,EAAUpB,aAAAA,EAAcC,aANlB,SAAAuB,GACjBA,EAAEC,iBACF7B,GAAS,UAAIG,GAEhB,EAGJ,C","sources":["modules/LoginForm/fields.js","modules/LoginForm/initialState.js","webpack://goit-react-hw-08-phonebook/./src/modules/LoginForm/LoginForm.module.css?2400","modules/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/Button/Button.module.css?4d6c","shared/components/Button/Button.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["const fields = {\n    email: {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        label: \"User email\",\n        placeholder: \"User email\",\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        label: \"User password\",\n        placeholder: \"User password\",\n    },\n};\n\nexport default fields;\n","const initialState = {\n    email: \"\",\n    password: \"\"\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__pVIZl\"};","import TextField from \"../../shared/components/TextField/TextField\";\nimport Button from \"../../shared/components/Button/Button\";\n\nimport useForm from \"../../shared/hooks/useForm\";\n\nimport fields from \"./fields\";\nimport initialState from \"./initialState\";\n\nimport PropTypes from 'prop-types';\nimport styles from \"./LoginForm.module.css\";\n\nconst LoginForm = ({onSubmit}) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n    const {email, password} = state;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.form}>\n            <TextField value={email} handleChange={handleChange} {...fields.email} />\n            <TextField value={password} handleChange={handleChange} {...fields.password} />\n            <Button>Login</Button>\n        </form>\n    )\n}\n\nLoginForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;","import { useDispatch } from \"react-redux\";\n\nimport {login} from \"../../redux/auth/auth-operations\";\n\nimport LoginForm from \"../../modules/LoginForm/LoginForm\";\n\nconst LoginPage = () => {\n    const dispatch = useDispatch();\n\n    const handleLogin = (data) => {\n        dispatch(login(data));\n    }\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"page-title\">Login</h1>\n            <LoginForm onSubmit={handleLogin} />\n        </div>\n    )\n}\n\nexport default LoginPage;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__wi4ey\"};","import styles from \"./Button.module.css\";\n\nconst Button = ({children, type = \"submit\"}) =>{\n    return <button type={type} className={styles.btn}>{children}</button>\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"field\":\"TextField_field__f880x\"};","import { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./TextField.module.css\";\n\nconst TextField = ({label, handleChange, ...props}) => {\n    const id = useMemo(()=> nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            <label htmlFor={id}>{label}</label>\n            <input className={styles.field} id={id} onChange={handleChange} {...props} />\n        </div>\n    )\n}\n\nexport default TextField;","import { useState, useCallback } from \"react\";\n// import { toast } from 'react-toastify';\n\nconst useForm = ({initialState, onSubmit})=> {\n    const [state, setState] = useState({...initialState})\n    \n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }, [setState]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({...state});\n        // setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;"],"names":["email","type","name","required","label","placeholder","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","styles","TextField","value","fields","Button","dispatch","useDispatch","data","login","children","props","id","useMemo","nanoid","htmlFor","onChange","useState","setState","useCallback","target","prevState","e","preventDefault"],"sourceRoot":""}