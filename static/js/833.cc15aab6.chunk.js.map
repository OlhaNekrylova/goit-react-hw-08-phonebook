{"version":3,"file":"static/js/833.cc15aab6.chunk.js","mappings":"yPAwBA,EAxBe,CACXA,KAAM,CACFC,KAAM,OACND,KAAM,OACNE,UAAU,EACVC,MAAO,YACPC,YAAa,aAEjBC,MAAO,CACHJ,KAAM,QACND,KAAM,QACNE,UAAU,EACVC,MAAO,aACPC,YAAa,cAEjBE,SAAU,CACNL,KAAM,WACND,KAAM,WACNE,UAAU,EACVC,MAAO,gBACPC,YAAa,kBCdrB,EANqB,CACjBJ,KAAM,GACNK,MAAO,GACPC,SAAU,ICFd,EAAuB,2B,SCmCvB,EAvBqB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnB,GAA4CC,EAAAA,EAAAA,GAAQ,CAACC,aAAAA,EAAcF,SAAAA,IAA5DG,EAAP,EAAOA,MAAOC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,aACrBZ,EAAyBU,EAAzBV,KAAMK,EAAmBK,EAAnBL,MAAOC,EAAYI,EAAZJ,SAMpB,OACI,kBAAMC,SAAUK,EAAcC,UAAWC,EAAzC,WACI,SAACC,EAAA,GAAD,QAAWC,MAAOhB,EAAMW,aAAcA,GAAkBM,EAAAA,QACxD,SAACF,EAAA,GAAD,QAAWC,MAAOX,EAAOM,aAAcA,GAAkBM,EAAAA,SACzD,SAACF,EAAA,GAAD,QAAWC,MAAOV,EAAUK,aAAcA,GAAkBM,EAAAA,YAC5D,SAACC,EAAA,EAAD,yBAGX,ECRD,EAfqB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACI,iBAAKP,UAAU,YAAf,WACI,eAAIA,UAAU,aAAd,2BACA,SAAC,EAAD,CAAcN,SAPD,SAACc,GAClBF,GAASG,EAAAA,EAAAA,IAAOD,GACnB,MAQJ,C,uDClBD,MAAsB,oB,SCKtB,EAJe,SAAC,GAAgC,IAA/BE,EAA8B,EAA9BA,SAA8B,IAApBtB,KAAAA,OAAoB,MAAb,SAAa,EAC3C,OAAO,mBAAQA,KAAMA,EAAMY,UAAWC,EAA/B,SAA4CS,GACtD,C,mGCHD,EAA0B,2BAA1B,EAA6D,yB,oCCe7D,EAXkB,SAAC,GAAqC,IAApCpB,EAAmC,EAAnCA,MAAOQ,EAA4B,EAA5BA,aAAiBa,GAAW,YAC7CC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAKC,EAAAA,EAAAA,KAAL,GAAe,IAElC,OACI,iBAAKd,UAAWC,EAAhB,WACI,kBAAOc,QAASH,EAAhB,SAAqBtB,KACrB,0BAAOU,UAAWC,EAAcW,GAAIA,EAAII,SAAUlB,GAAkBa,MAG/E,C,kECQD,IAnBgB,SAAC,GAA6B,IAA5Bf,EAA2B,EAA3BA,aAAcF,EAAa,EAAbA,SAC5B,GAA0BuB,EAAAA,EAAAA,WAAS,UAAIrB,IAAvC,eAAOC,EAAP,KAAcqB,EAAd,KAEMpB,GAAeqB,EAAAA,EAAAA,cAAY,YAAe,IAAbC,EAAY,EAAZA,OACxBjC,EAAeiC,EAAfjC,KAAMgB,EAASiB,EAATjB,MACbe,GAAS,SAAAG,GACL,OAAO,kBAAIA,GAAX,cAAuBlC,EAAOgB,GACjC,GACJ,GAAE,CAACe,IAQJ,MAAO,CAACrB,MAAAA,EAAOqB,SAAAA,EAAUpB,aAAAA,EAAcC,aANlB,SAAAuB,GACjBA,EAAEC,iBACF7B,GAAS,UAAIG,GAEhB,EAGJ,C","sources":["modules/RegisterForm/fields.js","modules/RegisterForm/initialState.js","webpack://goit-react-hw-08-phonebook/./src/modules/RegisterForm/RegisterForm.module.css?281d","modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/Button/Button.module.css?4d6c","shared/components/Button/Button.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["const fields = {\n    name: {\n        type: \"text\",\n        name: \"name\",\n        required: true,\n        label: \"User name\",\n        placeholder: \"User name\",\n    },\n    email: {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        label: \"User email\",\n        placeholder: \"User email\",\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        label: \"User password\",\n        placeholder: \"User password\",\n    },\n};\n\nexport default fields;","const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Rm9pY\"};","import TextField from \"../../shared/components/TextField/TextField\";\nimport Button from \"../../shared/components/Button/Button\";\n\nimport useForm from \"../../shared/hooks/useForm\";\n\nimport fields from \"./fields\";\nimport initialState from \"./initialState\";\n\n// import { toast } from 'react-toastify';\n\nimport PropTypes from 'prop-types';\nimport styles from \"./RegisterForm.module.css\";\n\nconst RegisterForm = ({onSubmit}) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n    const {name, email, password} = state;\n\n    // if (state.name.toLowerCase() === fields.name.toLowerCase()) {\n    //     return toast.info('Please, specify your data.');\n    // }\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.form}>\n            <TextField value={name} handleChange={handleChange} {...fields.name} />\n            <TextField value={email} handleChange={handleChange} {...fields.email} />\n            <TextField value={password} handleChange={handleChange} {...fields.password} />\n            <Button>Register</Button>\n        </form>\n    )\n}\n\nRegisterForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\n\nexport default RegisterForm;","import { useDispatch } from \"react-redux\";\n\nimport {signup} from \"../../redux/auth/auth-operations\";\n\nimport RegisterForm from \"../../modules/RegisterForm/RegisterForm\";\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n\n    const handleSignup = (data) => {\n        dispatch(signup(data));\n    }\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"page-title\">Registration</h1>\n            <RegisterForm onSubmit={handleSignup} />\n        </div>\n    )\n}\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__wi4ey\"};","import styles from \"./Button.module.css\";\n\nconst Button = ({children, type = \"submit\"}) =>{\n    return <button type={type} className={styles.btn}>{children}</button>\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"field\":\"TextField_field__f880x\"};","import { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./TextField.module.css\";\n\nconst TextField = ({label, handleChange, ...props}) => {\n    const id = useMemo(()=> nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            <label htmlFor={id}>{label}</label>\n            <input className={styles.field} id={id} onChange={handleChange} {...props} />\n        </div>\n    )\n}\n\nexport default TextField;","import { useState, useCallback } from \"react\";\n// import { toast } from 'react-toastify';\n\nconst useForm = ({initialState, onSubmit})=> {\n    const [state, setState] = useState({...initialState})\n    \n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }, [setState]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({...state});\n        // setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;"],"names":["name","type","required","label","placeholder","email","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","styles","TextField","value","fields","Button","dispatch","useDispatch","data","signup","children","props","id","useMemo","nanoid","htmlFor","onChange","useState","setState","useCallback","target","prevState","e","preventDefault"],"sourceRoot":""}